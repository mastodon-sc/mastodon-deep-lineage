<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.scijava</groupId>
        <artifactId>pom-scijava</artifactId>
        <version>38.0.1</version>
    </parent>

    <groupId>org.mastodon</groupId>
    <artifactId>mastodon-deep-lineage</artifactId>
    <version>0.4.0</version>

    <properties>
        <package-name>org.mastodon</package-name>
        <license.licenseName>bsd_2</license.licenseName>
        <license.projectName>mastodon-deep-lineage</license.projectName>
        <license.organizationName>Mastodon authors</license.organizationName>
        <license.copyrightOwners>Stefan Hahmann</license.copyrightOwners>

        <mastodon.version>1.0.0-beta-33</mastodon.version>
        <mastodon.group>org.mastodon</mastodon.group>
        <!-- when a pom-scijava exists that references the scijava-common 2.99.1 release, this can be removed again -->
        <scijava-common.version>2.99.1-SNAPSHOT</scijava-common.version>

        <releaseProfiles>sign,deploy-to-scijava</releaseProfiles>

        <enforcer.skip>true</enforcer.skip>

        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.language>java</sonar.language>
        <sonar.verbose>false</sonar.verbose>
    </properties>

    <name>Deep Lineage Project Mastodon Plugins</name>
    <description>A collection of plugins to analyse lineages of tracked objects in Mastodon,
        e.g. Lineage Tree Classification, Export of ellipsoids as image, some more
        numerical features for Spots and BranchSpots
    </description>
    <url>https://github.com/mastodon-sc/mastodon-deep-lineage</url>
    <inceptionYear>2022</inceptionYear>
    <organization>
        <name>Mastodon Science</name>
        <url>http://github.com/mastodon-sc</url>
    </organization>
    <licenses>
        <license>
            <name>BSD-2-Clause</name>
            <url>https://opensource.org/licenses/BSD-2-Clause</url>
        </license>
    </licenses>

    <dependencies>
        <!-- Mastodon Core -->
        <dependency>
            <groupId>org.mastodon</groupId>
            <artifactId>mastodon</artifactId>
            <version>${mastodon.version}</version>
        </dependency>

        <!-- include simple logging facade for logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- include logback-classic at test runtime -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- include logback-core at test runtime -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- tree similarity -->
        <dependency>
            <groupId>org.jgrapht</groupId>
            <artifactId>jgrapht-core</artifactId>
        </dependency>

        <dependency>
            <groupId>sc.fiji</groupId>
            <artifactId>spim_data</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>ui-behaviour</artifactId>
        </dependency>

        <!-- hierarchical clustering -->
        <dependency>
            <groupId>com.apporiented</groupId>
            <artifactId>hierarchical-clustering</artifactId>
            <version>1.2.0</version>
        </dependency>

        <!-- graph ml export -->
        <dependency>
            <groupId>org.jgrapht</groupId>
            <artifactId>jgrapht-io</artifactId>
        </dependency>

        <!-- export of dendrogram to svg -->
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreesvg</artifactId>
        </dependency>

        <!-- UMAP -->
        <dependency>
            <groupId>tech.molecules</groupId>
            <artifactId>external-umap-java</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- t-SNE -->
        <dependency>
            <groupId>com.github.lejon.T-SNE-Java</groupId>
            <artifactId>tsne</artifactId>
            <version>v2.6.4</version>
        </dependency>

        <!-- Standardization for UMAP preprocessing -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Mockito used in some unit tests -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>4.11.0</version>
            <scope>test</scope>
        </dependency>


        <!-- hierarchical clustering, tests only -->
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>weka-dev</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- include imagej-legacy at test runtime -->
        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>imagej-legacy</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- include mastodon at test runtime -->
        <dependency>
            <groupId>org.mastodon</groupId>
            <artifactId>mastodon</artifactId>
            <version>${mastodon.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <mailingLists>
        <mailingList>
            <name>ImageJ Forum</name>
            <archive>https://forum.image.sc/</archive>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:git:https:github.com/mastodon-sc/mastodon-deep-lineage</connection>
        <developerConnection>scm:git:git@github.com:mastodon-sc/mastodon-deep-lineage</developerConnection>
        <tag>mastodon-deep-lineage-0.4.0</tag>
        <url>https://github.com/mastodon-sc/mastodon-deep-lineage</url>
    </scm>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/mastodon-sc/mastodon-deep-lineage/issues</url>
    </issueManagement>
    <ciManagement>
        <system>GitHub Actions</system>
        <url>https://github.com/mastodon-sc/mastodon-deep-lineage/actions</url>
    </ciManagement>

    <developers>
        <developer>
            <id>stefanhahmann</id>
            <name>Stefan Hahmann</name>
            <email>stefan.hahmann@tu-dresden.de</email>
            <organization>TU Dresden (Physics of Life)</organization>
            <organizationUrl>https://physics-of-life.tu-dresden.de/</organizationUrl>
            <roles>
                <role>lead</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>none</name>
        </contributor>
    </contributors>

    <repositories>
        <repository>
            <id>scijava.public</id>
            <url>https://maven.scijava.org/content/repositories/public/</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>build</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Configure the maven-surefire-plugin to use a heap size of 3gb while running tests. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <argLine>-Xmx3g</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <!-- Configure the maven-surefire-plugin to use a heap size of 3gb while running tests for jacoco coverage analysis. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <argLine>@{argLine} -Xmx3g</argLine>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.7</version>
                        <executions>
                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <formats>
                                        <format>XML</format>
                                    </formats>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
